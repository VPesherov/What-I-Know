Варианты добавления динамики в запросы:
1. Параметрами запроса
2. Через URL
3. HTTP-заголовки

Создадим нашу view-функцию

def hello_view(request: HttpRequest) -> HttpResponse:
    return HttpResponse('Hello World!')

А теперь попробуем передать get-параметры
Это такие параметры, которые передаются после знака вопроса
например:

127.0.0.1:8000/hello/?name=Sasha

?name=Sasha

Вот мы передали параметр name со значение Sasha
Но теперь нам надо отловить данный параметр
Попробуем это сделать

Перепишем нашу функцию

def hello_view(request: HttpRequest) -> HttpResponse:
    name = request.GET["name"] # отлавливаем name
    return HttpResponse(f'Hello {name}')

А если мы хотим отловить несколько параметров? Без проблем - нужно указать их через амперсант

127.0.0.1:8000/hello/?name=Sasha&age=22

Но что будет если мы не передадим параметров? Всё верно - будет ошибка

127.0.0.1:8000/hello/

Всё потому что мы помним, что мы пытаемся достать значения из словаря - а если такого значения в словаре нет - ошибка.
И тут есть два варианта:
1. Использовать try + except
2. Использовать метод get у словаря

Перепишем нашу функцию

def hello_view(request: HttpRequest) -> HttpResponse:
    name = request.GET.get("name")
    age = int(request.GET.get("age", 20)) # 20 - это дефолтное значение - если ничего не найдено
    return HttpResponse(f'Hello {name}, {age}')

Теперь давайте создадим другой обработчик
А как нам передавать туда параметры сразу?
В url мы должны сказать, что мы хотим передавать параметры

urlpatterns = [
    path('admin/', admin.site.urls),
    path('hello/', hello_view),
    path('sum/<a>/<b>', sum1) # передаём параметры a и b
]

И тогда наша функция должна уметь принимать данные параметры - для этого
В заголовке функции параметры должны быть названы идентично тем как мы передаём

def sum1(request, a, b):
    result = 0
    return HttpResponse(f'Sum = {result}')

Теперь мы переписываем нашу функцию

def sum1(request, a, b):
    result = int(a) + int(b) # не забываем что нужно конвертировать параметры
    return HttpResponse(f'Sum = {result}')

Но можно поступить умнее, и прокачать наш маршрут
Для этого используем конвертеры django

path('sum/<int:a>/<int:b>', sum1) # передаём параметры a и b

В данном случае наш path проверит что переданные параметры можно перевести в int, а затем их конвертируем в int.
Если же будут переданы строки - мы получим ошибку, что нет такой страницы

На все стандартные конвертеры можно посмотреть тут:
https://docs.djangoproject.com/en/3.2/topics/http/urls/#path-converters

Но также можно создавать и свои конвертеры:
https://netology.ru/profile/program/dj-80/lessons/304847/lesson_items/1648571