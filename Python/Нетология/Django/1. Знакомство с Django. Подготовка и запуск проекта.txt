Django - фреймворк для быстрого создания веб-приложений, полностью написанный на Python.

Django - является очень популярным проектом и используется многими крупными компаниями

Исходный код Django можно найти на github

Почему Django?
-Грамотно спроектированная архитектура
-Прозрачная работа с БД
-Серьёзное отношение к безопасности
-Огромное количество библиотек и написанного кода
-Подробная документация(на английском)

Для установки Django используем следующее:

pip install django

Чтоб убедиться что всё установилось корректно:

pip -m django --version

Django требует определённой структуры проекта, поэтому после установки нужно сделать пару махинаций
Вводим команду:
 	
django-admin startproject django_test .

Где
django-admin - административная команда
startproject - параметр запуска обозначающий что мы хотим начать проект(в данном случае создать его)
django_test - название проекта
. - директория в которой будем создавать - в аднном случае в этой же директории

Увидем что у нас создались какие-то папки
Файл manage.py - можно назвать "главным" (это что-то типо main)

Давайте теперь попробуем запустить сервер и посмотрим что будет:

python manage.py runserver

Можно переходить по локальному ip и увидем что всё получилось

Теперь немного вернёмся к терминологии
Что такое проект и приложение?

Под проектом можно воспринимать полноценный сайт. Это:
-коллекция настроек
-база данных
-подключения приложения

Например youtube - это проект

Приложение - это изолированная часть функциональности. Приложения могут переиспользоваться в различных проектах. Ближайшая аналогия
- модуль в Python.

Теперь разберёмся что такое клиент и сервер

Клиент:
1. Программа, которая хочет получать информацию
2. Физическое устройство, на котором работает программа-клиент

Сервер:
1. Специальная программа, которая даёт информацию
2. Физическое устройство, на котором запущена программа-сервер

Обычно эти программы - расположены на различных вычислительных машинах и взаимодействуют между собой по различным протоколам, но они
могут быть расположены и на одной машине.

В итоге наша задача сводится к построению серверов.И вот Django и помогает в построении таких серверов.

Веб-приложение само по себе реализует клиент-серверное взаимодействие. Пользователи шлют запросы к серверу, он выдаёт им результат
в виде HTML и JSON данных.
И django делает всё это за нас

Django-проект выступает в роли сервера. Для того чтобы запустить проект, выполните команды:

python manage.py migrate # создаёт БД(на первых порах можно без неё)
python manage.py runserver # запускает проект

Давайте теперь попробуем создать базовую страничку 
Hello world

Для начало нам нужно создать приложение:

python manage.py startapp demo

python manage.py - базовая команда взаимодействия с проектом
startapp - создание приложения
demo - название приложения

Нам создасться некоторая папка с нашим приложением в котором будут файлы.
Нам понадобиться для всего этого патерн MVC

MVC - Model View Controller
и в django он очень часто используется
Он обозначает что есть:

Model - которая описывает данные с которыми мы работаем
View - отображение нашей информации
Controller - часть которая отвечает за связь между Model и View, по сути он добывает данные и преобразует их или как-то обрабатывает
их







