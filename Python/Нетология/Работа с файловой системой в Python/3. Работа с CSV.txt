Работа с DictWriter
https://docs-python.ru/standart-library/modul-csv-python/klass-dictwriter-modulja-csv/

Первый формат с которым мы познакомися - это CSV(Рисунок 1).
Формат CSV можно читать даже не зная как он устроен, но Python может помочь нам упростить работу с ним. 
Для чего используют формат CSV можно увидеть на Рисунке 2.

Как работать с CSV в Python увидим на Рисунке 3.
Теперь на практике:

Для того чтобы начать работать с CSV нужно сначала её импортировать.

import csv

Затем откроем csv файл и поработаем с ним, откроем как в прошлом уроке

import csv

with open('files/newsafr.csv', 'rt', encoding='UTF-8') as file: # открыли файл
    reader = csv.reader(file) # считали в переменную содержимое файла
    for row_number, row in enumerate(reader): # пройдёмся в цикле по содержимому, считывает он у нас по строчно поэтому
						# перебираем в цикле
        print(row_number, row) # выводим номер строки и само содержимое

# Вывод
0 ['guid', '_id', 'pubDate', 'description', 'link', 'title']
1 ['https://www.votpusk.ru/news.asp?msg=544347', '544347', 'Mon\\; 17 Oct 2016 00:28 +0300', 'Израильский турист погиб а еще трое получили ранения в результате автомобильной аварии в Йоханнесбурге Южная Африка Об этом сообщил 2 канал в воскресенье 16 октября Трагедия произошла когда автомобиль туристов стал участником ДТП а именно когда произошло лобовое столкновение Авария произошла всего через несколько дней после того как семья туристов в Грузии потеряла двух детей в автомобильной аварии MIGnews com', 'https://www.votpusk.ru/news.asp?msg=544347 ', 'Израильский турист погиб в ДТП в Африке']

Будет выведено, куча строк идентичного формата как строка с номером 1, в строке с номером 0 - указаны заголовки CSV формата.
Нужно также уметь немного анализировать информацию в CSV файле - так как нужно понимать, где заголовки например и тд.
Сейчас в нашем файле заголовком является последний элемент в списке, то есть обратиться к нему можно как row[-1]
Давайте попробуем

import csv

with open('files/newsafr.csv', 'rt', encoding='UTF-8') as file:
    reader = csv.reader(file)
    for row_number, row in enumerate(reader):
        print(row_number, row[-1])

# Вывод
0 title
1 Израильский турист погиб в ДТП в Африке

Видим, что вывелся только заголовок.

Теперь попробуем переформатировать csv файл сразу в список - это можно сделать просто применив list()

import csv

with open('files/newsafr.csv', 'rt', encoding='UTF-8') as file: # открыли файл
    reader = csv.reader(file) # считали файл
    news_list = list(reader) # преобразовали данные

for news in news_list: # перебрали данные
    print(news[-1]) # вывели только последний элемент из массива, то есть заголовки

# Вывод
title
Израильский турист погиб в ДТП в Африке

Как мы заметили, у нас постоянно выводится title, и это немного неудобно, так как в коде его постоянно надо будет учитывать, а
делать постоянные проверки, не круто, поэтому давайте избавимся от него другим способом.
Так как все записи у нас хранятся в списке, то и удалить запись можно как из списка

header = news_list.pop(0) # удаляем первую запись и на всякий случай сохраняем её в переменную header если пригодится
for news in news_list:
    print(news[-1]) 

# Вывод
Израильский турист погиб в ДТП в Африке
Ростуризм просит турбизнес сообщать людям о риске заражения в Африке

Как видим слова title больше нет

И из плюсов такого метода работы - это можно посчитать и количество данных(в данном случае новостей) в нашем файле с помощью
функции len().
print(f'В этом файле {len(news_list)} строк')

Теперь поработаем с DictReader

import csv

with open('files/newsafr.csv', 'rt', encoding='UTF-8') as file:
    reader = csv.DictReader(file) # считываем в словарь
    for row in reader:
        print(row)

# Вывод
{'guid': 'https://www.votpusk.ru/news.asp?msg=544347', '_id': '544347', 'pubDate': 'Mon\\; 17 Oct 2016 00:28 +0300', 'description': 'Израильский турист погиб а еще трое получили ранения в результате автомобильной аварии в Йоханнесбурге Южная Африка Об этом сообщил 2 канал в воскресенье 16 октября Трагедия произошла когда автомобиль туристов стал участником ДТП а именно когда произошло лобовое столкновение Авария произошла всего через несколько дней после того как семья туристов в Грузии потеряла двух детей в автомобильной аварии MIGnews com', 'link': 'https://www.votpusk.ru/news.asp?msg=544347 ', 'title': 'Израильский турист погиб в ДТП в Африке'}
# и таких строк для каждой новости

Как мы видим у нас появилась пара ключ-значение для каждого элемента файла csv
И теперь мы можем обращаться к нашим заголовкам не как к индексам, а как к ключам

import csv

with open('files/newsafr.csv', 'rt', encoding='UTF-8') as file:
    reader = csv.DictReader(file)
    for row in reader:
        print(row['title']) # обратились к title

# Вывод
Израильский турист погиб в ДТП в Африке
# и тд

Теперь разберёмся со следующей проблемой. CSV файл - это по сути файл данные в котором разделены запятыми.
То есть выглядит они примерно так:

https://www.votpusk.ru/news.asp?msg=534896,534896,"Wed, 16 Sep 2015 14:36 +0300"

Но встречается следующая проблема, если открывать русским Excel, то только запятые могут означать например - дробные числа, например,
2,5 или 3,14 
И можно неправильно всё это считать.
Для этого нужно настроить файл, чтоб например - ставились не запятые, а точки с запятой ;
Решить это можно следующим образом

import csv

# считали данные в список
with open('files/newsafr.csv', 'rt', encoding='UTF-8') as file:
    reader = csv.reader(file)
    news_list = list(reader)

header = news_list.pop(0) # сохранили заголовки
with open('files/newsafr2.csv', 'w', encoding='UTF-8') as file: # создали второй файл - в который - мы всё сохраним
    writer = csv.writer(file, delimiter=";") # указали, что в качестве разделителя - будем использовать ;
    writer.writerow(header) # записали заголовок
    writer.writerows(news_list) # записали заголовки

Если мы выполним данный код то заметим, что в файле появятся дополнительные пробелы, чтоб их избежать, нужно добавить
параметр new_line при открытии файла

header = news_list.pop(0)
with open('files/newsafr2.csv', 'w', newline='') as file: # сюда вставляем new_line, а также убираем encoding - так как мы запишем
							# в кодировке питона, а нам нужно чтоб была обычная под windows
    writer = csv.writer(file, delimiter=";")
    writer.writerow(header)
    writer.writerows(news_list)

Теперь разберёмся с расстановкой ковычек в файле
Для этого - нам поможет такое параметр как quoting
У этого параметра могут быть несколько значений

csv.QUOTE_NONE - Полные запрет ковычек, не ставим их вообще
csv.QUOTE_ALL - Обернёт все данные в ковычки, не смотря на значения
csv.QUOTE_MINIMAL - ставим ковычки там, где без них обойтись нельзя

Прописываем их во writer 
writer = csv.writer(file, delimiter=";", quoting=csv.QUOTE_ALL)

Но настоек на самом деле куча, и прописывать их постоянно будет неудобно поэтому у нас есть специальная настройка, куда это можно
всё прописать
И настройки можно сохранять следующим образом

csv.register_dialect("csv_comma_quote_all",delimiter=";", quoting=csv.QUOTE_ALL) # прописали настройки и самое главное
# дали первым параметром - имя этим настройкам

with open('files/newsafr2.csv', 'w', newline='') as file:
    writer = csv.writer(file, dialect="csv_comma_quote_all") # и тут уже прописываем файл и имя используемых настроек
    writer.writerow(header)
    writer.writerows(news_list)

Теперь попробуем записать в файл с помощью DictReader

import csv

with open('files/newsafr.csv', 'rt', encoding='UTF-8') as file: # открываем файл из которого считываем
    reader = csv.DictReader(file)
    with open("files/newsafr3.csv", "w", newline="", encoding="UTF-8") as file3: # открываем файл в который будем записывать
        writer = csv.DictWriter(file3, fieldnames=reader.fieldnames) # используем DictWriter, чтоб записывать и важно передать
								# параметр fieldnames, которые покажет где хранятся заголовки

        writer.writeheader() # записываем заголовки
        for row in reader: # перебираем в цикле строки 
            row['title'] = row['title'].upper() # делаемз заголовок большим(это абсолютно необязательно и не имеет отношения к задачи)
            writer.writerow(row) # построчно записываем
