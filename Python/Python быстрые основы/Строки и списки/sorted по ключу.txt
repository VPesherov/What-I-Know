
в функции sorted - есть необязательный параметр key туда можно передать функцию
пример 

1) Передадим втроенную функцию abs
a = [4, -10, 43, -300, 54, 289, -34, -8, 749]
print(sorted(a, key=abs))

# [4, -8, -10, -34, 43, 54, 289, -300, 749] # отсортировано с учётом функции abs(модуль)

2) Передадим собственную функцию

def f(x):
    return x % 10 # функция которая берёт последнюю цифру от передаваемого числа


a = [4, 10, 43, 300, 54, 289, 34, 8, 749]
print(sorted(a, key=f))

А если мы например хотим использовать несколько критериев сортировки? То просто передать их
через запятую

def f(x):
    return x % 10, x // 10 % 10 # получаем последнюю и предпоследнюю цифру в числе


a = [4, 10, 43, 300, 54, 289, 34, 8, 749]
print(sorted(a, key=f)) # теперь когда у нас два критериям то в случае равенства первого будет
			# использоваться второй

# [300, 10, 43, 4, 34, 54, 8, 749, 289]


3) Встроенные методы объектов

Например

a = ['ZZZ', 'aaa', 'eee', 'DDD', 'BBB', 'www']
print(sorted(a)) # ['BBB', 'DDD', 'ZZZ', 'aaa', 'eee', 'www'] # маленькие буквы всегда меньше больших

А допустим мы хотим отсортировать не смотря на регистр, тогда логично было бы в начале привести их
в один регистр а затем уже сортировать и так можно сделать благодаря методам объекта

a = ['ZZZ', 'aaa', 'eee', 'DDD', 'BBB', 'www']
print(sorted(a, key=str.lower)) # ['aaa', 'BBB', 'DDD', 'eee', 'www', 'ZZZ']
				# причём стоит заметить что сами регистры букв не меняются


4) Анонимные функции

a = ['ZZZ 79', 'aaa 45', 'eee 43', 'DDD 800', 'BBB 5', 'www 14']
print(sorted(a, key=lambda x: int(x.split()[1]))) # по числам которые в конце каждой строки

# ['BBB 5', 'www 14', 'eee 43', 'aaa 45', 'ZZZ 79', 'DDD 800']


a = ['ZZZ 800', 'aaa 45', 'eee 43', 'DDD 800', 'BBB 5', 'www 14']
print(sorted(a, key=lambda x: (int(x.split()[1]), x.split()[0])))# 2 аргумента в лямбда тоже
								# можно вернуть

# ['BBB 5', 'www 14', 'eee 43', 'aaa 45', 'DDD 800', 'ZZZ 800']
















