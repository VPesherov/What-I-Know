При создании функции можно указать, какие аргументы нужно передавать обязательно, а какие нет. 
Соответственно, функция может быть создана с:

-обязательными параметрами

-необязательными параметрами (параметрами со значением по умолчанию)


Обязательные параметры - определяют, какие аргументы нужно передать функции обязательно. 
При этом, их нужно передать ровно столько, сколько указано параметров функции 
(нельзя указать большее или меньшее количество)

Функция с обязательными параметрами:

def add(a, b):
   return a + b

Функция add ожидает обязательно ровно два аргумента: a и b.

Если передавать ей не правильное количество аргументов, будет ошибка

>>> add(2)
Traceback (most recent call last):
   File "", line 1, in <module>
TypeError: add() missing 1 required positional argument: 'b'


Необязательные параметры

При создании функции можно указывать значение по умолчанию для параметра таким образом: 
def greetings(name, msg="Welcome, Good Morning"). В этом случае, параметр msg указан 
со значением по умолчанию и может не передаваться при вызове функции.

Пример функции greetings с параметром со значением по умолчанию:

def greetings(name, msg="Welcome, Good Morning"):
     message = f"Hello {name}! {msg}"
     print(message)

Так как у параметра msg есть значение по умолчанию, соответствующий аргумент 
можно не указывать при вызове функции, если значение по умолчанию подходит:

>>> greetings("Neo")
Hello Neo! Welcome, Good Morning
Если нужно поменять значение по умолчанию:

>>> greetings("Neo", "You are the one")
Hello Neo! You are the one



