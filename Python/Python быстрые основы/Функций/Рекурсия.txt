Рекурсия – определение, описание, изображение какого-либо объекта или процесса внутри 
самого этого объекта или процесса, то есть ситуация, когда объект является частью самого себя.

Рекурсия в программировании - ситуация, когда функция вызывает саму себя. 
Пример:

def recursion(x):
    print(x)
    recursion(x+1)

recursion(1) # будет ошибка так как выход из рекурсии не описан а максимальная глубина рекурсии
в питоне 1000

Поэтому чтобы избежать такую ошибку, необходимо позаботиться о важной части рекурсии, 
а именно о создании условия выхода из рекурсии. 
У рекурсии обязательно должен быть выход, т.е. такое условие,  
при соблюдении которого функция перестает вызывать саму себя. 
В примере ниже у нас есть условие, по которому мы вызываем рекурсию вновь:

def rec(x):
    if x < 4:
        print(x)
        rec(x+1)
        print(x)

rec(1) # 1 2 3 3 2 1

Вот как можно реализовать формулу нахождения факториала:

def fact(n):
    if n == 1:
        return 1
    return fact(n-1) * n

print(fact(4))

Мы вызвали функцию fact(4), которая будет равняться

fact(4) = fact(3) * 4,  
fact(3) = fact(2) * 3,
fact(2) = fact(1) * 2,
fact(1) = 1. 

И получается раз fact(1) = 1, то fact(2) = 1*2 = 2, fact(3) = 2*3=6, fact(4) = 6*4 = 24.



