Генератор - итератор, элементы коротого можно итерировать только один раз

Итератор - объекст который поддерживает функцию next(). Помнит о том, какой элемент будет
брать следующим.

Итерируемый объект - объекст, который предоставляет возможность обойти поочерёдно свои элементы.
Может быть преобразован к итератору.

Пример
s = [1,2,3] # это итерируемый объект(список сам по себе итерируемый объект)
next(s) # но сам по себе этот объект не поддерживает функцию next() так как он ещё не является
	# итератором

# для того чтоб получить из итерируемого объекта - итератор нужно использовать функцию iter()

d = iter(s)
next(d) # 1
next(d) # 2
next(d) # 3
next(d) # Ошибка

Выражения генератору они изначально являются итераторами
b = (i ** 2 for i in range(1, 6)
print(next(b)) # 1
print(next(b)) # 4

Но генератор поддерживает токо один обход

b = (i ** 2 for i in range(1, 6))
for i in b:
	print(i)
# Вывод
1
4
9
16
25
#


for i in b:
	print(i)

# вывода не будет так как второй раз

также функцию sum итерирует наш объект

b = (i ** 2 for i in range(1, 6))
print(sum(b)) # 55
print(sub(b) # 0

# плюсы генератора, что эти элементы не хранятся в памяти

Это полезно например в следующем случае

1) Нам нужен огромные список чисел
c = [i for i in range(1000000000)] # Будет ошибка
c = (i for i in range(1000000000)) # Ошибки не будет

for i in c:
	print(i)

# будет спокойный вывод









