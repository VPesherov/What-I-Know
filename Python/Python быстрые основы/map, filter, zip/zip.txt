Функция zip() в Python создает итератор, который объединяет элементы из нескольких источников данных. 
Эта функция работает со списками, кортежами, множествами и словарями для создания списков 
или кортежей, включающих все эти данные.

a = [5, 6, 7, 8]

b = [100, 200, 300, 40]

rez = zip(a, b)
print(list(rez)) # [(5, 100), (6, 200), (7, 300), (8, 40)]

Объединение определяется по наименьшему списку, например

a = [5, 6, 7]

b = [100, 200, 300, 40]

rez = zip(a, b)
print(list(rez))

# [(5, 100), (6, 200), (7, 300)] # так как в наименьшем списке элемента 3, то и комбинаций будет три

Добавим 4 итерируемый объект


a = [5, 6, 7, 8]

b = [100, 200, 300, 40]

c = 'abcd'

rez = zip(a, b, c)
print(list(rez))

# [(5, 100, 'a'), (6, 200, 'b'), (7, 300, 'c'), (8, 40, 'd')] # совместили три последовательности в одну

возвращается в zip всегда кортеж

а теперь если мы хотим наоборот из zip вернуть три наши коллекции

a = [5, 6, 7, 8]
b = [100, 200, 300, 40]
c = 'abcd'

rez = zip(a, b, c)
col1, col2, col3 = zip(*rez)
print(col1, col2, col3)

# (5, 6, 7, 8) (100, 200, 300, 40) ('a', 'b', 'c', 'd')

с помощью zip можно легко создавать словари

from pprint import pprint
employee_numbers = [2, 9, 18, 28]
employee_names = ["Valentin", "Leonti", "Andrew", "Sasha"]

numbers = dict(zip(employee_numbers, employee_names))
employees = dict(zip(employee_names, employee_numbers))


pprint(numbers)
pprint('------')
pprint(employees)

# Вывод
{2: 'Valentin', 9: 'Leonti', 18: 'Andrew', 28: 'Sasha'}
'------'
{'Andrew': 18, 'Leonti': 9, 'Sasha': 28, 'Valentin': 2}
#
