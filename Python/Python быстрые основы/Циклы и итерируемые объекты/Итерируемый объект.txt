Итерируемый объект - объект предоставляющий возможность поочерёдного прохода по своим элементам.

v = iter(range(5)) # создали итератор
print(v) # <range_iterator object at 0x7faaab953c90>

Итераторы нужны для обхода элементов, хранящихся внутри итератора. Как это сделать? 
Как обходить элементы?

Очень просто, через функцию next(). 

v = iter(range(5))
print(next(v)) # 0
print(next(v)) # 1
print(next(v)) # 2 
print(next(v)) # 3
print(next(v)) # 4

В случае того, если был вызван последний элемент и будет ещё одна попытка вызова этой функции
, то мы получим ошибку StopIteration
, которая говорит о том, что все элементы были пройдены и больше элементов нет.

Таким образом, итерируемые объекты позволяют поочередно пройти по всем своим элемента 
и они поддерживают вызов функции next() . При обходе создаётся итератор, запоминающий 
на каком элементе мы сейчас находимся. После завершения обхода всех элементов 
последующая попытка вызова функции next ведёт.

Итерируемые объекты - это строка и списки, числа - нет
