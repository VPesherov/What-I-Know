Встроенный модуль typing позволяет создавать аннотации в более 
сложных случаях, например если вы хотите проаннотировать переменную сразу 
несколькими типами или указать аннотацию для элементов списка.

При помощи объекта Optional мы можем разрешить хранить в одной переменной 
не только указанный тип, но и значение None

from typing import Optional

num: Optional[int] = None
word: Optional[str] = None

Переменная num из примера выше может теперь хранить в себе целые числа и также значение None. 
Переменная word проаннотирована строковым типом и еще и пустым значением None.

Обязательно после Optional тип указывается в квадратных скобках

Без указания Optional при попытки сохранить None 
в переменную pycharm жаловался бы на недопустимый тип 


Например вы хотите указать при помощи аннотаций, 
что в переменной можно сохранить любой тип переменной.
В этом вам поможет объект Any из модуля typing

from typing import Any

value: Any
value = 10
print(value)
value = [1, 2, 3]
print(value)
value = {'hi': 'привет'}
print(value)

Объект UNION

param: Union[int, float, str] = 3

При такой аннотации в переменной param могут хранится вещественные и целые числа, а также строки

С версии 3.9 можно писать так
param: int| float| str



