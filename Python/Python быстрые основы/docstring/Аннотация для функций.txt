Аннотации также широко используется в функциях, а именно в параметрах функции. 
Возьмём к примеру функцию add_numbers, которая принимает два параметра, складывает 
их и возвращает результат сложения:

def add_numbers(a, b):
    return a + b

Если мы ожидаем, что передавать в эту функцию будет только целые числа, 
тогда наша функция с аннотациями будет иметь следующий вид:

def add_numbers(a: int, b: int):
    return a + b

При вызове данной функции переменные другого типа данных будут подсвечиваться, 
однако никаких ошибок не будет.

Чтобы посмотреть где хранятся аннотации необходимо 
обратиться к атрибуту .__annotations__ у нашей функции add_numbers:

def add_numbers(a: int, b: int):
  return a + b

 
print(add_numbers.__annotations__) # {'a': <class 'int'>, 'b': <class 'int'>}

В функциях можно аннотировать не только параметры, 
но и возвращаемые с помощью return значения. Вот как это выглядит

def add_numbers(a: int, b: int) -> int:
  return a + b

 
print(add_numbers.__annotations__)

# {'a': <class 'int'>, 'b': <class 'int'>, 'return': <class 'int'>}


