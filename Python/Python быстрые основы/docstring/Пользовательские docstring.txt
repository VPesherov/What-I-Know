Когда вы определяете свою собственную функцию, то по умолчанию у нее атрибут __doc__ является 
пустым, другими словами он будет равен None. Давайте в это убедимся. 
Возьмём к примеру функцию, которая принимает список и на его основании создаёт 
новый список только с чётными числами и вызовем функцию help()

def get_even(lst):
    even_lst = []
    for elem in lst:
        if elem % 2 == 0:
            even_lst.append(elem)
    return even_lst


print(get_even.__doc__)

# Вывод
None
#

Видим, что в атрибуте __doc__ хранится значение None. 
Чтобы это изменить необходимо на первой строчке после определения функции 
создать объект строки, где указать описание вашей функции. Вот пример:

def get_even(lst):
    'Функция создаёт список из чётных чисел'
    even_lst = []
    for elem in lst:
        if elem % 2 == 0:
            even_lst.append(elem)
    return even_lst


print(get_even.__doc__)
print('-'*15)
help(get_even)

# Вывод
Функция создаёт список из чётных чисел
---------------
Help on function get_even in module __main__:

get_even(lst)
    Функция создаёт список из чётных чисел
#

Многострочная docstring  

Также стоит отметить, что, как правило, строка документации состоит не из одной строчки, 
а из нескольких, поэтому сразу привыкайте создавать многострочную строку. Пример:

def get_even(lst):
    '''Функция 
создаёт список 
из чётных чисел'''
    even_lst = []
    for elem in lst:
        if elem % 2 == 0:
            even_lst.append(elem)
    return even_lst


print(get_even.__doc__)
print('-'*15)
help(get_even)

# Вывод
Функция 
создаёт список 
из чётных чисел
---------------
Help on function get_even in module __main__:

get_even(lst)
    Функция 
    создаёт список 
    из чётных чисел
#



